{"version":3,"sources":["modules/snake-game/Board.js","modules/snake-game/game.js","modules/snake-game/ShowDirection.js","modules/snake-game/useKeyboardControl.js","utils.js","pages/Snake.js","pages/Page2.js","pages/Results.js","App.js","index.js"],"names":["Board","width","height","star","snake","snakeArray","checkIfSnake","x","y","filter","sn","length","className","Array","map","iy","ix","Game","snakeHeadPosition","this","boardWidth","boardHeight","wallTeleport","boardArr","row","rowArr","col","push","points","addPoint","gameStatus","isOn","info","gameOver","direction","randomPosition","Math","floor","random","starPosition","Snake","startPosition","getSnakeArray","moveSnake","add","moveSnakeBody","makeNextStep","console","log","printGameInfo","printSnakeInfo","dir","head","next","prev","tail","addOnePart","position","newEl","moveNext","pointer","prevX","prevY","resArr","ShowDirection","emoji","useKeyboardControl","startDirection","useState","setDirection","checkKey","e","keyCode","code","useEffect","document","addEventListener","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","Snake2","game","getRefreshedGameState","gameState","setGameState","handleMoveClick","status","onClick","Page2","Results","name","setName","setPoints","results","setResults","useFetch","data","get","post","response","loadInitialResults","loading","error","useCallback","a","initialResults","ok","toFixed","addNewResult","finishTime","Date","newResult","onSubmit","ev","preventDefault","type","onChange","target","value","r","_id","App","history","useHistory","onResize","querySelector","style","setProperty","window","innerHeight","removeEventListener","href","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c58167a6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Board = ({ width, height, star, snake, snakeArray }) => {\n  const checkIfSnake = ({ x, y }) => {\n    return snakeArray.filter((sn) => sn.x === x && sn.y === y).length > 0;\n  };\n\n  return (\n    <div>\n      {/* ROWS */}\n      <div className=\"border-[1px] flex flex-col w-min border-blue-800\">\n        {[...Array(height)].map((y, iy) => (\n          <div key={iy} className=\"flex h-6 border-0 border-yellow-800\">\n            {/* COLS */}\n            {[...Array(width)].map((x, ix) => (\n              <div\n                key={width * iy + ix}\n                className={`w-6 h-6 border-[1px] border-yellow-800 text-xs \n                ${snake.x === ix && snake.y === iy ? \"bg-green-500 rounded-md\" : \"\"}\n                ${checkIfSnake({ x: ix, y: iy }) ? \"bg-green-200 rounded-md\" : \"\"} \n                ${star.x === ix && star.y === iy ? \"bg-yellow-400\" : \"\"} \n                    }`}></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","export default function Game({ snakeHeadPosition, width, height }) {\n  this.boardWidth = width;\n  this.boardHeight = height;\n\n  this.wallTeleport = true;\n\n  const boardArr = [];\n  for (let row = 0; row < this.boardHeight; row++) {\n    const rowArr = [];\n    for (let col = 0; col < this.boardWidth; col++) {\n      rowArr.push({ x: col, y: row, snake: false, star: false });\n    }\n    boardArr.push(rowArr);\n  }\n\n  this.boardArr = boardArr;\n\n  //points\n  this.points = 0;\n  this.addPoint = function () {\n    this.points++;\n  };\n\n  //game status\n  this.gameStatus = { isOn: true, info: \"\", gameOver: false };\n\n  //current direction\n  this.direction = \"R\";\n\n  const randomPosition = () => {\n    return {\n      x: Math.floor(Math.random() * this.boardWidth),\n      y: Math.floor(Math.random() * this.boardHeight),\n    };\n  };\n\n  this.starPosition = randomPosition();\n\n  this.snakeHeadPosition = snakeHeadPosition;\n  this.snake = new Snake({ startPosition: snakeHeadPosition });\n\n  this.getSnakeArray = this.snake.getSnakeArray;\n\n  const moveSnake = ({ x, y }, add = false) => {\n    this.snakeHeadPosition = { x, y };\n    this.snake.moveSnakeBody({ x, y }, add);\n    //if (add) this.snake.addOnePart({ x, y });\n  };\n\n  this.makeNextStep = () => {\n    //debugger;\n    let { x, y } = this.snakeHeadPosition;\n    const { direction } = this;\n    if (direction === \"L\") x = x - 1;\n    if (direction === \"R\") x = x + 1;\n    if (direction === \"D\") y = y + 1;\n    if (direction === \"U\") y = y - 1;\n\n    //check if move valid\n    if (x < 0 || y < 0 || x >= this.boardWidth || y >= this.boardHeight) {\n      if (this.wallTeleport) {\n        if (x < 0) x = this.boardWidth + x;\n        if (y < 0) y = this.boardWidth + y;\n        if (x >= this.boardWidth) x = x - this.boardWidth;\n        if (y >= this.boardWidth) y = y - this.boardHeight;\n        moveSnake({ x: x, y: y });\n      } else {\n        console.log(\"❌ GAME OVER 😔\");\n        return;\n      }\n    } else if (x === this.starPosition.x && y === this.starPosition.y) {\n      //PUNKT\n      this.points += 1;\n      console.log(\"yeah ⭐ punkty: \" + this.points);\n      this.starPosition = randomPosition();\n      moveSnake({ x: x, y: y }, true);\n    } else if (this.getSnakeArray().filter((sn) => (sn.x === x) & (sn.y === y)).length > 0) {\n      console.log(\"❌ GAME OVER 🍰🍰🍰🍰 ZJADŁEM SIĘ 😔\");\n    } else {\n      moveSnake({ x: x, y: y });\n    }\n  };\n\n  this.printGameInfo = () => {\n    this.snake.printSnakeInfo();\n    console.dir(this);\n  };\n}\n\nfunction Snake({ startPosition }) {\n  this.length = 1;\n  this.head = { x: startPosition.x, y: startPosition.y, next: null, prev: null };\n  let tail = this.head;\n  //const body = [this.head]\n\n  this.addOnePart = (position) => {\n    const newEl = {\n      prev: tail,\n      next: null,\n      x: position.x,\n      y: position.y,\n    };\n\n    tail.next = newEl;\n    tail = newEl;\n    this.length += 1;\n  };\n\n  this.moveSnakeBody = ({ x, y }, add) => {\n    const moveNext = ({ x, y }, pointer) => {\n      const prevX = pointer.x;\n      const prevY = pointer.y;\n      pointer.x = x;\n      pointer.y = y;\n      if (pointer.next) moveNext({ x: prevX, y: prevY }, pointer.next);\n      //to add element one step earlier - pass prevx and prevY\n      else if (!pointer.next && add) this.addOnePart({ x: x, y: y });\n    };\n\n    moveNext({ x: x, y: y }, this.head);\n  };\n\n  this.getSnakeArray = () => {\n    const resArr = [];\n    let pointer = this.head;\n    while (pointer) {\n      resArr.push({ x: pointer.x, y: pointer.y });\n      pointer = pointer.next;\n    }\n    return resArr;\n  };\n\n  this.printSnakeInfo = () => {\n    console.log(`Snake length: ${this.length} || headPosition X:${this.head.x}|Y:${this.head.y}`);\n    let pointer = this.head;\n    while (pointer) {\n      console.log(`X:${pointer.x}|Y:${pointer.y}`);\n      pointer = pointer.next;\n    }\n  };\n}\n","export const ShowDirection = ({ direction }) => {\n  const emoji = () => {\n    switch (direction) {\n      case \"R\":\n        return \"➡️\";\n      case \"L\":\n        return \"⬅️\";\n      case \"U\":\n        return \"⬆️\";\n      case \"D\":\n        return \"⬇️\";\n      default:\n        break;\n    }\n  };\n\n  return <>{emoji()}</>;\n};\n","import React, { useEffect, useState } from \"react\";\n\nconst useKeyboardControl = (startDirection = \"R\") => {\n  const [direction, setDirection] = useState(startDirection);\n\n  const checkKey = (e) => {\n    if (e.keyCode === \"38\" || e.code === \"ArrowUp\") {\n      setDirection(\"U\");\n    } else if (e.keyCode === \"40\" || e.code === \"ArrowDown\") {\n      setDirection(\"D\");\n    } else if (e.keyCode === \"37\" || e.code === \"ArrowLeft\") {\n      setDirection(\"L\");\n    } else if (e.keyCode === \"39\" || e.code === \"ArrowRight\") {\n      setDirection(\"R\");\n    } else if (e.keyCode === \"32\" || e.code === \" \" || e.code === \"Spacebar\") {\n      console.log(\"SPACJA\");\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", checkKey);\n  }, []);\n\n  return [direction];\n};\n\nexport default useKeyboardControl;\n","import { useEffect, useRef, useState } from \"react\";\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  useInterval(() => {\n    setCount(count + 1);\n  }, 1000);\n\n  return <h1>{count}</h1>;\n}\n\n//https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Board from \"../modules/snake-game/Board\";\n\nimport Game from \"../modules/snake-game/game\";\nimport { ShowDirection } from \"../modules/snake-game/ShowDirection\";\nimport useKeyboardControl from \"../modules/snake-game/useKeyboardControl\";\nimport { useInterval } from \"../utils\";\n\nconst Snake2 = () => {\n  const game = useRef(new Game({ snakeHeadPosition: { x: 2, y: 5 }, width: 15, height: 15 }));\n\n  const getRefreshedGameState = () => {\n    return {\n      snakeHeadPosition: game.current.snakeHeadPosition,\n      points: game.current.points,\n      starPosition: game.current.starPosition,\n      snakeArray: game.current.getSnakeArray(),\n    };\n  };\n\n  const [gameState, setGameState] = useState(getRefreshedGameState());\n\n  const [direction] = useKeyboardControl();\n\n  useEffect(() => {\n    game.current.direction = direction;\n  }, [direction]);\n\n  const handleMoveClick = () => {\n    game.current.makeNextStep();\n    setGameState(getRefreshedGameState());\n  };\n\n  const handleStopGameClick = () => {\n    setGameState({ ...gameState, status: \"STOPPED\" });\n  };\n\n  const handleResetGameClick = () => {\n    game.current = new Game({ snakeHeadPosition: { x: 2, y: 5 } });\n    setGameState({ ...gameState, status: \"RESTARTED\" });\n  };\n\n  useInterval(() => {\n    if (gameState.status != \"STOPPED\") {\n      handleMoveClick();\n    }\n  }, 300);\n\n  return (\n    <div className=\"flex flex-col items-center pt-16 h-screen-js bg-gray-400\">\n      <section className=\"flex gap-5 justify-around\">\n        <button onClick={handleMoveClick} className=\"p-2 bg-gray-300 rounded-md\">\n          MOVE 🐍\n        </button>\n        <button onClick={game.current.printGameInfo} className=\"p-2 bg-gray-300 rounded-md\">\n          PRINT INFO 🐍\n        </button>\n        <button onClick={handleStopGameClick} className=\"p-2 bg-gray-300 rounded-md\">\n          STOP ❌\n        </button>\n        <button onClick={handleResetGameClick} className=\"p-2 bg-gray-300 rounded-md\">\n          RESET 🔁\n        </button>\n      </section>\n      <section className=\"mt-5\">\n        <h1 className=\"text-gray-800\">\n          Direction: <ShowDirection direction={direction} /> <div className=\"inline-block w-10\"></div> Points:{\" \"}\n          {gameState.points}\n        </h1>\n      </section>\n\n      <section className=\"mt-5\">\n        <Board\n          width={game.current.boardWidth}\n          height={game.current.boardHeight}\n          star={game.current.starPosition}\n          snake={gameState.snakeHeadPosition}\n          snakeArray={gameState.snakeArray}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default Snake2;\n","import React from \"react\";\n\nconst Page2 = () => {\n  return (\n    <div>\n      <h1>Dwa</h1>\n    </div>\n  );\n};\n\nexport default Page2;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport useFetch, { Provider } from \"use-http\";\n\nconst Results = () => {\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(null);\n  const [results, setResults] = useState([]);\n  const { get, post, response, loading, error } = useFetch(\"http://localhost:4000\", { data: [] });\n\n  const loadInitialResults = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const initialResults = await get(\"/result?sort=dsc\");\n    console.log(\"RESPONSE: \" + response);\n    console.dir(response);\n    if (response.ok) setResults(initialResults);\n  }, [get, response]);\n\n  useEffect(() => {\n    loadInitialResults();\n    setPoints((Math.random() * 20).toFixed(0));\n  }, []); // componentDidMount\n\n  const handleSave = (ev) => {\n    ev.preventDefault();\n    addNewResult();\n    console.log(\"CLICK\");\n  };\n\n  const addNewResult = useCallback(async () => {\n    if (!name) return; // if we don't have a title, we don't want to add a new todo\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const newResult = await post(\"/result\", {\n      name,\n      points: points,\n      finishTime: new Date(),\n    });\n    if (response.ok) {\n      setName(\"\");\n      setResults((results) => [newResult, ...results]);\n    }\n  }, [post, response, name]);\n\n  return (\n    <div>\n      <h1>Leaderboard</h1>\n      <h1>You got: {points}</h1>\n      <form onSubmit={handleSave}>\n        <input\n          className=\"border-2\"\n          type=\"text\"\n          onChange={(ev) => {\n            setName(ev.target.value);\n          }}></input>\n        <button type=\"submit\">OK</button>\n      </form>\n      Imie: {name}\n      <div className=\"flex flex-col mt-10\">\n        {results.map((r) => {\n          return (\n            <div key={r._id}>\n              {r.name} - punkty: {r.points}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n","import \"./App.css\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Snake from \"./pages/Snake\";\nimport Page2 from \"./pages/Page2\";\nimport Results from \"./pages/Results\";\n\nfunction App() {\n  let history = useHistory();\n  const onResize = () => {\n    document.querySelector(\":root\").style.setProperty(\"--vh\", window.innerHeight / 100 + \"px\");\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", onResize);\n    onResize();\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"absolute flex items-center justify-around w-full h-10 bg-pink-600\">\n        <a href=\"#/\" onClick={() => history.push(\"/\")}>\n          Snake\n        </a>\n        <a href=\"#/\" onClick={() => history.push(\"/2\")}>\n          Page2\n        </a>\n        <a href=\"#/\" onClick={() => history.push(\"/results\")}>\n          Results\n        </a>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Snake />\n        </Route>\n        <Route exact path=\"/2\" component={Page2} />\n        <Route exact path=\"/results\" component={Results} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}